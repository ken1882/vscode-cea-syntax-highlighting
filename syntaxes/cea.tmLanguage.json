{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "auto-assembler",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#string-double"
		},
		{
			"include": "#string-single"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#entity"
		},
		{
			"include": "#meta"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#registers"
		},
		{
			"include": "#instructions"
		},
		{
			"include": "#luablock"
		}
	],
	"repository": {
		"comments":{
			"patterns": [{
				"name": "comment.line.cea",
				"match": "(//.*|{.?})$"
			},{
				"name": "comment.block.cea",
				"begin": "{[^\\$].?",
				"end": ".?}"
			}]
		},
		"meta":{
			"patterns": [{
				"name": "meta.preprocessor.ctframework.cea",
				"match": "(?i)^\\[\\b(enable|disable)\\b\\]$"
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.auto-assembler-function.cea",
				"match": "(?i)\\b(aobscanmodule|assert|aobscan|alloc|label|unregistersymbol|registersymbol|dealloc|define|createthread|align)\\b"
			},{
				"name": "entity.name.type.cea",
				"match": "(?i)\\b(byte|dword|qword|ptr|int|float|double)\\b"
			}]
		},
		"registers":{
			"patterns": [{
				"name": "constant.language.x86-general-purpose-register.cea",
				"match": "(?i)\\b(eax|ebx|ecx|edx|edi|esi|esp|ebp|eip)\\b"
			},{
				"name": "constant.language.x86-lower-register.cea",
				"match": "(?i)\\b(ax|bx|cx|dx|di|si|sp|bp|ah|al|bh|bl|ch|cl|dh|dl|sil|spl|bpl|ip)\\b"
			},{
				"name": "constant.language.x64-general-purpose-register.cea",
				"match": "(?i)\\b(rax|rbx|rcx|rdx|rdi|rsi|rsp|rbp|rip|r8|r9|r10|r11|r12|r13|r14|r15)\\b"
			},{
				"name": "constant.language.other-register.cea",
				"match": "(?i)\\b(cs|es|ds|ss|fs|gs|cf|pf|af|zf|sf|tf|if|df|of|iopl|nf|rf|vm|ac|vif|vip|id)\\b"
			},{
				"name": "variable.other.property.static.float-point-register.cea",
				"match": "(?i)\\b(xmm0|xmm1|xmm2|xmm3|xmm4|xmm5|xmm6|xmm7|xmm8|xmm9|xmm10|xmm11|xmm12|xmm13|xmm14|xmm15|st)\\b"
			}]
		},
		"instructions":{
			"patterns": [{
				"name": "keyword.control.x86-64-instructions.cea",
				"match": "(?i)^(\\s*)\\b(DB|DD|DQ|DW|AAA|AAD|AAM|AAS|ADC|ADD|AND|CALL|CBW|CLC|CLD|CLI|CMC|CMP|CMPSB|CMPSW|CWD|DAA|DAS|DEC|DIV|ESC|HLT|IDIV|IMUL|IN|INC|INT|INTO|IRET|JCXZ|JMP|LAHF|LDS|LEA|LES|LOCK|LODSB|LODSW|LOOP|MOV|MOVSB|MOVSW|MUL|NEG|NOP|NOT|OR|OUT|POP|POPF|PUSH|PUSHF|RCL|RCR|REP|RET|RETN|RETF|ROL|ROR|SAHF|SAL|SAR|SBB|SCASB|SCASW|SHL|SHR|STC|STD|STI|STOSB|STOSW|SUB|TEST|WAIT|XCHG|XLAT|XOR|JA|JAE|JB|JBE|JC|JE|JG|JGE|JL|JLE|JNA|JNAE|JNB|JNBE|JNC|JNE|JNG|JNGE|JNL|JNLE|JNO|JNP|JNS|JNZ|JO|JP|JPE|JPO|JS|JZ|BOUND|ENTER|INS|LEAVE|OUTS|POPA|PUSHA|PUSH|IMUL|SHL|SHR|SAL|SAR|ROL|ROR|RCL|RCR|ARPL|CLTS|LAR|LGDT|LIDT|LLDT|LMSW|LOADALL|LSL|LTR|SGDT|SIDT|SLDT|SMSW|STR|VERR|VERW|BSF|BSR|BT|BTC|BTR|BTS|CDQ|CMPSD|CWDE|IBTS|INSD|IRET|JECXZ|LFS|LGS|LSS|LODSD|LOOPW|LOOPD|(MOV\\s+(to|from)\\s+(CR|DR|TR))|MOVSD|MOVSX|MOVZX|OUTSD|POPAD|POPFD|PUSHAD|PUSHFD|SCASD|SHLD|SHRD|STOSD|XBTS|LOOPZW|LOOPEW|LOOPNZW|LOOPNEW|LOOPZD|LOOPED|LLOPNZD|LOOPNED|SETA|SETAE|SETB|SETBE|SETC|SETE|SETG|SETGE|SETL|SETLE|SETNA|SETNAE|SETNB|SETNBE|SETNC|SETNE|SETNG|SETNGE|SETNL|SETNLE|SETNO|SETNP|SETNS|SETNZ|SETO|SETP|SETPE|SETPO|SETS|SETZ|BSWAP|CMPXCHG|INVD|INVLPG|WBINVD|XADD|CPUID|CMPXCHG8B|RDMSR|RDTSC|WRMSR|RSM|RDPMC|SYSCALL|SYSRET|SYSENTER|SYSEXIT|UD2|CMOVA|CMOVAE|CMOVB|CMOVBE|CMOVC|CMOVE|CMOVG|CMOVGE|CMOVL|CMOVLE|CMOVNA|CMOVNAE|CMOVNB|CMOVNBE|CMOVNC|CMOVNE|CMOVNG|CMOVNGE|CMOVNL|CMOVNLE|CMOVNO|CMOVNP|CMOVNS|CMOVNZ|CMOVO|CMOVP|CMOVPE|CMOVPO|CMOVS|CMOVZ|NOP|PREFETCHT0|PREFETCHT1|PREFETCHT2|PREFETCHNTA|SFENCE|CLFLUSH|LFENCE|MFENCE|MOVNTI|PAUSE|MONITOR|MWAIT|CRC32|CDQE|CQO|CMPSQ|CMPXCHG16B|IRETQ|JRCXZ|LODSQ|MOVSXD|POPFQ|PUSHFQ|RDTSCP|SCASQ|STOSQ|SWAPGS|INVEPT|INVVPID|VMFUNC|VMPTRLD|VMPTRST|VMCLEAR|VMREAD|VMWRITE|VMCALL|VMLAUNCH|VMRESUME|VMXOFF|VMXON|F2XM1|FABS|FADD|FADDP|FBLD|FBSTP|FCHS|FCLEX|FCOM|FCOMP|FCOMPP|FDECSTP|FDISI|FDIV|FDIVP|FDIVR|FDIVRP|FENI|FFREE|FIADD|FICOM|FICOMP|FIDIV|FIDIVR|FILD|FIMUL|FINCSTP|FINIT|FIST|FISTP|FISUB|FISUBR|FLD|FLD1|FLDCW|FLDENV|FLDENVW|FLDL2E|FLDL2T|FLDLG2|FLDLN2|FLDPI|FLDZ|FMUL|FMULP|FNCLEX|FNDISI|FNENI|FNINIT|FNOP|FNSAVE|FNSAVEW|FNSTCW|FNSTENV|FNSTENVW|FNSTSW|FPATAN|FPREM|FPTAN|FRNDINT|FRSTOR|FRSTORW|FSAVE|FSAVEW|FSCALE|FSQRT|FST|FSTCW|FSTENV|FSTENVW|FSTP|FSTSW|FSUB|FSUBP|FSUBR|FSUBRP|FTST|FWAIT|FXAM|FXCH|FXTRACT|FYL2X|FYL2XP1|EMMS|MOVD|MOVQ|PACKSSDW|PACKSSWB|PACKUSWB|PADDB|PADDW|PADDD|PADDQ|PADDSB|PADDSW|PADDUSB|PADDUSW|PAND|PANDN|POR|PXOR|PCMPEQB|PCMPEQW|PCMPEQD|PCMPGTB|PCMPGTW|PCMPGTD|PMADDWD|PMULHW|PMULLW|PSLLW|PSLLD|PSLLQ|PSRAD|PSRAW|PSRLW|PSRLD|PSRLQ|PSUBB|PSUBW|PSUBD|PSUBSB|PSUBSW|PSUBUSB|PSUBUSW|PUNPCKHBW|PUNPCKHWD|PUNPCKHDQ|PUNPCKLBW|PUNPCKLWD|PUNPCKLDQ|MASKMOVQ|MOVNTQ|PSHUFW|PINSRW|PEXTRW|PMOVMSKB|PMINUB|PMAXUB|PAVGB|PAVGW|PMULHUW|PMINSW|PMAXSW|PSADBW|PSUBQ|PMULUDQ|PSIGNB|PSIGNW|PSIGND|PSHUFB|PMULHRSW|PMADDUBSW|PHSUBW|PHSUBSW|PHSUBD|PHADDSW|PHADDW|PHADDD|PALIGNR|PABSB|PABSW|PABSD|ANDPS|ANDNPS|ORPS|XORPS|MOVUPS|MOVSS|MOVLPS|MOVHLPS|UNPCKLPS|UNPCKHPS|MOVHPS|MOVLHPS|MOVAPS|MOVNTPS|MOVMSKPS|CVTPI2PS|CVTSI2SS|CVTTPS2PI|CVTTSS2SI|CVTPS2PI|CVTSS2SI|UCOMISS|COMISS|SQRTPS|SQRTSS|RSQRTPS|RSQRTSS|RCPPS|RCPSS|ADDPS|ADDSS|MULPS|MULSS|SUBPS|SUBSS|MINPS|MINSS|DIVPS|DIVSS|MAXPS|MAXSS|LDMXCSR|STMXCSR|CMPPS|CMPSS|SHUFPS|MOVAPD|MOVNTPD|MOVHPD|MOVLPD|MOVUPD|MOVMSKPD|MOVSD|ADDPD|ADDSD|DIVPD|DIVSD|MAXPD|MAXSD|MINPD|MINSD|MULPD|MULSD|SQRTPD|SQRTSD|SUBPD|SUBSD|ANDPD|ANDNPD|ORPD|XORPD|CMPPD|CMPSD|COMISD|UCOMISD|SHUFPD|UNPCKHPD|UNPCKLPD|CVTDQ2PD|CVTDQ2PS|CVTPD2DQ|CVTPD2PI|CVTPD2PS|CVTPI2PD|CVTPS2DQ|CVTPS2PD|CVTSD2SI|CVTSD2SS|CVTSI2SD|CVTSS2SD|CVTTPD2DQ|CVTTPD2PI|CVTTPS2DQ|CVTTSD2SI|MASKMOVDQU|MOVDQ2Q|MOVDQA|MOVDQA|MOVDQU|MOVDQU|MOVQ2DQ|MOVNTDQ|PSHUFHW|PSHUFLW|PSHUFD|PSLLDQ|PSRLDQ|PUNPCKHQDQ|PUNPCKLQDQ|PSIGNB|PSIGNW|PSIGND|PSHUFB|PMULHRSW|PMADDUBSW|PHSUBW|PHSUBSW|PHSUBD|PHADDSW|PHADDW|PHADDD|PALIGNR|PABSB|PABSW|PABSD|DPPS|DPPD|BLENDPS|BLENDVPS|BLENDPD|BLENDVPD|ROUNDPS|ROUNDSS|ROUNDPD|ROUNDSD|INSERTPS|EXTRACTPS|MPSADBW|PHMINPOSUW|PMULLD|PMULDQ|PBLENDVB|PBLENDW|PMINSB|PMINUW|PMINSD|PMINUD|PMAXSB|PMAXUW|PMAXSD|PMAXUD|PINSRB|PINSRD|PINSRQ|PEXTRB|PEXTRW|PEXTRD|PEXTRQ|PMOVSXBW|PMOVZXBW|PMOVSXBD|PMOVZXBD|PMOVSXBQ|PMOVZXBQ|PMOVSXWD|PMOVZXWD|PMOVSXWQ|PMOVZXWQ|PMOVSXDQ|PMOVZXDQ|PTEST|PCMPEQQ|PACKUSDW|MOVNTDQA|PCMPESTRI|PCMPESTRM|PCMPISTRI|PCMPISTRM|PCMPGTQ|VCVTPH2PS|VCVTPS2PH)\\b"
			}]
		},
		"string-double": {
			"name": "string.quoted.double.cea",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.cea",
					"match": "\\\\."
				}
			]
		},
		"string-single": {
			"name": "string.quoted.single.cea",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.cea",
					"match": "\\\\."
				}
			]
		},
		"constant":{
			"patterns": [{
				"name": "constant.character.escape.labels.cea",
				"match": "(\\w.*:|@@:|@f|@b)"
			},{
				"name": "constant.numeric.decimal-numeric-leaded.cea",
				"match": "(?i)\\b#\\d*\\b"
			},{
				"name": "constant.numeric.hex-numeric-leaded.cea",
				"match": "(?i)\\b(\\$|0x)(\\d|[abcdef])(\\d|[abcdef])*\\b"
			},{
				"name": "constant.numeric.hex-numeric-direct.cea",
				"match": "(?i)(?<!^)\\b(\\d|[abcdef])(\\d|[abcdef])*\\b"
			},{
				"name": "constant.numeric.float-numeric.cea",
				"match": "(?i)\\b\\d+\\.\\d+\\b"
			},{
				"name": "support.class.pe-module.cea",
				"match": "(?i)\\b((\\w[^,;:\\)\\(\\[\\]\\{\\}\\!\\?/\\\\])(.[^,;:\\)\\(\\[\\]\\{\\}\\!\\?/\\\\])?)+\\.\\w+\\b"
			}]
		},
		"luablock":{
			"name": "meta.embedded.block.lua",
			"begin": "(?i)^{\\$lua}$",
			"end": "(?i)^{\\$asm}$",
			"patterns": [{"include": "source.lua"}]
		}
	},
	"scopeName": "source.cea"
}